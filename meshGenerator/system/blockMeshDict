/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2212                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

# include "../include/settings"

scale   1;

vertices
(
    ($X_in  $Y_in  $Z_in) // Parameters imported from DragAndDownForcePractice/meshGenerator/include/settings
    ($X_fi  $Y_in  $Z_in) // Parameters imported from DragAndDownForcePractice/meshGenerator/include/settings
    ($X_fi  $Y_fi  $Z_in) // Parameters imported from DragAndDownForcePractice/meshGenerator/include/settings
    ($X_in  $Y_fi  $Z_in) // Parameters imported from DragAndDownForcePractice/meshGenerator/include/settings
    ($X_in  $Y_in  $Z_fi) // Parameters imported from DragAndDownForcePractice/meshGenerator/include/settings
    ($X_fi  $Y_in  $Z_fi) // Parameters imported from DragAndDownForcePractice/meshGenerator/include/settings
    ($X_fi  $Y_fi  $Z_fi) // Parameters imported from DragAndDownForcePractice/meshGenerator/include/settings
    ($X_in  $Y_fi  $Z_fi) // Parameters imported from DragAndDownForcePractice/meshGenerator/include/settings
);

blocks
(
    hex (0 1 2 3 4 5 6 7) ($N_cells_X $N_cells_Y $N_cells_Z) simpleGrading (1 1 1) // Parameters imported from DragAndDownForcePractice/meshGenerator/include/settings
);

edges
(
);

boundary
(
    frontAndBack
    {
        type patch;
        faces
        (
            (3 7 6 2)
            (1 5 4 0)
        );
    }
    inlet
    {
        type patch;
        faces
        (
            (0 4 7 3)
        );
    }
    outlet
    {
        type patch;
        faces
        (
            (2 6 5 1)
        );
    }
    lowerWall
    {
        type wall;
        faces
        (
            (0 3 2 1)
        );
    }
    upperWall
    {
        type patch;
        faces
        (
            (4 5 6 7)
        );
    }
);


// ************************************************************************* //
